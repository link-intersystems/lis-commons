create table sakila.actor (actor_id smallint not null, first_name varchar(45) not null, last_name varchar(45) not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (actor_id));
create index idx_actor_last_name on sakila.actor (last_name);
create table sakila.actor_genre (actor_genre_id smallint not null, actor_id smallint not null, name varchar(20) not null, primary key (actor_genre_id));
create index actor_id on sakila.actor_genre (actor_id);
create table sakila.actor_info (actor_id smallint default 0 not null, first_name varchar(45) not null, last_name varchar(45) not null, film_info clob, primary key (actor_id, first_name, last_name));
create table sakila.address (address_id smallint not null, address varchar(50) not null, address2 varchar(50), district varchar(20) not null, city_id smallint not null, postal_code varchar(10), phone varchar(20) not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (address_id));
create index idx_fk_city_id on sakila.address (city_id);
create table sakila.category (category_id smallint not null, name varchar(25) not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (category_id));
create table sakila.city (city_id smallint not null, city varchar(50) not null, country_id smallint not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (city_id));
create index idx_fk_country_id on sakila.city (country_id);
create table sakila.country (country_id smallint not null, country varchar(50) not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (country_id));
create table sakila.customer (customer_id smallint not null, store_id smallint not null, first_name varchar(45) not null, last_name varchar(45) not null, email varchar(50), address_id smallint not null, active smallint default 1 not null, create_date timestamp not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (customer_id));
create index idx_fk_address_id on sakila.customer (address_id);
create index idx_customer_fk_store_id on sakila.customer (store_id);
create index idx_last_name on sakila.customer (last_name);
create table sakila.datetime (id smallint not null, time time, timestamp timestamp, date date, datetime timestamp, primary key (id, time, timestamp, date, datetime));
create table sakila.film (film_id smallint not null, title varchar(255) not null, description clob, release_year date, language_id smallint not null, original_language_id smallint, rental_duration smallint default 3 not null, rental_rate decimal(10,2) default 4.99 not null, length smallint, replacement_cost decimal(10,2) default 19.99 not null, rating varchar(255) default 'G', special_features varchar(255), last_update timestamp default CURRENT_TIMESTAMP not null, primary key (film_id));
create index idx_fk_language_id on sakila.film (language_id);
create index idx_fk_original_language_id on sakila.film (original_language_id);
create index idx_title on sakila.film (title);
create table sakila.film_actor (actor_id smallint not null, film_id smallint not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (actor_id, film_id));
create index idx_film_actor_fk_film_id on sakila.film_actor (film_id);
create table sakila.film_category (film_id smallint not null, category_id smallint not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (film_id, category_id));
create index fk_film_category_category on sakila.film_category (category_id);
create table sakila.film_comment (film_id smallint not null, comment varchar(128), primary key (film_id, comment));
create index film_comment_film_id on sakila.film_comment (film_id);
create table sakila.film_genre (film_id smallint not null, genre varchar(128), primary key (film_id, genre));
create index film_genre_film_id on sakila.film_genre (film_id);
create table sakila.film_image (film_id smallint not null, image blob, primary key (film_id));
create index film_image_film_id on sakila.film_image (film_id);
create table sakila.film_origin (film_id smallint not null, city varchar(128), country varchar(128), primary key (film_id, city, country));
create index film_origin_film_id on sakila.film_origin (film_id);
create table sakila.film_rating (film_rating_id smallint not null, film_id smallint not null, stars smallint not null, primary key (film_rating_id));
create index film_rating_film_id on sakila.film_rating (film_id);
create table sakila.film_text (film_id smallint not null, title varchar(255) not null, description clob, primary key (film_id));
create index idx_title_description on sakila.film_text (title);
create table sakila.inventory (inventory_id smallint not null, film_id smallint not null, store_id smallint not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (inventory_id));
create index idx_inventory_fk_film_id on sakila.inventory (film_id);
create index idx_store_store_id on sakila.inventory (store_id);
create index idx_store_film_id on sakila.inventory (film_id);
create table sakila.language (language_id smallint not null, name varchar(20) not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (language_id));
create table sakila.payment (payment_id smallint not null, customer_id smallint not null, staff_id smallint not null, rental_id integer, amount decimal(10,2) not null, payment_date timestamp not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (payment_id));
create index fk_payment_rental on sakila.payment (rental_id);
create index idx_payment_fk_customer_id on sakila.payment (customer_id);
create index idx_payment_fk_staff_id on sakila.payment (staff_id);
create table sakila.rental (rental_id integer not null, rental_date timestamp not null, inventory_id smallint not null, customer_id smallint not null, return_date timestamp, staff_id smallint not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (rental_id));
create index rental_rental_date on sakila.rental (rental_date);
create index rental_inventory_id on sakila.rental (inventory_id);
create index rental_customer_id on sakila.rental (customer_id);
create index idx_rental_fk_customer_id on sakila.rental (customer_id);
create index idx_fk_inventory_id on sakila.rental (inventory_id);
create index idx_rental_fk_staff_id on sakila.rental (staff_id);
create table sakila.staff (staff_id smallint not null, first_name varchar(45) not null, last_name varchar(45) not null, address_id smallint not null, picture blob, email varchar(50), store_id smallint not null, active smallint default 1 not null, username varchar(16) not null, password varchar(40), last_update timestamp default CURRENT_TIMESTAMP not null, primary key (staff_id));
create index idx_staff_fk_address_id on sakila.staff (address_id);
create index idx_staff_fk_store_id on sakila.staff (store_id);
create table sakila.store (store_id smallint not null, manager_staff_id smallint not null, address_id smallint not null, last_update timestamp default CURRENT_TIMESTAMP not null, primary key (store_id));
create index idx_unique_manager on sakila.store (manager_staff_id);
create index idx_store_fk_address_id on sakila.store (address_id);
alter table sakila.actor_genre add constraint SQL_55043F4D foreign key (actor_id) references sakila.actor;
alter table sakila.address add constraint SQL_FBE3AF2 foreign key (city_id) references sakila.city;
alter table sakila.city add constraint SQL_BE0E0FDB foreign key (country_id) references sakila.country;
alter table sakila.customer add constraint fk_customer_address foreign key (address_id) references sakila.address;
alter table sakila.customer add constraint fk_customer_store foreign key (store_id) references sakila.store;
alter table sakila.film add constraint fk_film_language foreign key (language_id) references sakila.language;
alter table sakila.film add constraint fk_film_orig_language foreign key (original_language_id) references sakila.language;
alter table sakila.film_actor add constraint fk_film_actor_actor foreign key (actor_id) references sakila.actor;
alter table sakila.film_actor add constraint fk_film_actor_film foreign key (film_id) references sakila.film;
alter table sakila.film_category add constraint fk_film_category_category foreign key (category_id) references sakila.category;
alter table sakila.film_category add constraint fk_film_category_film foreign key (film_id) references sakila.film;
alter table sakila.film_comment add constraint SQL_6E8B3E42 foreign key (film_id) references sakila.film;
alter table sakila.film_genre add constraint SQL_43C8745E foreign key (film_id) references sakila.film;
alter table sakila.film_image add constraint SQL_422AFB86 foreign key (film_id) references sakila.film;
alter table sakila.film_origin add constraint SQL_D47E84C5 foreign key (film_id) references sakila.film;
alter table sakila.film_rating add constraint SQL_858C74AE foreign key (film_id) references sakila.film;
alter table sakila.inventory add constraint fk_inventory_film foreign key (film_id) references sakila.film;
alter table sakila.inventory add constraint fk_inventory_store foreign key (store_id) references sakila.store;
alter table sakila.payment add constraint fk_payment_customer foreign key (customer_id) references sakila.customer;
alter table sakila.payment add constraint fk_payment_rental foreign key (rental_id) references sakila.rental;
alter table sakila.payment add constraint fk_payment_staff foreign key (staff_id) references sakila.staff;
alter table sakila.rental add constraint fk_rental_customer foreign key (customer_id) references sakila.customer;
alter table sakila.rental add constraint fk_rental_inventory foreign key (inventory_id) references sakila.inventory;
alter table sakila.rental add constraint fk_rental_staff foreign key (staff_id) references sakila.staff;
alter table sakila.staff add constraint fk_staff_address foreign key (address_id) references sakila.address;
alter table sakila.staff add constraint fk_staff_store foreign key (store_id) references sakila.store;
alter table sakila.store add constraint fk_store_address foreign key (address_id) references sakila.address;
alter table sakila.store add constraint fk_store_staff foreign key (manager_staff_id) references sakila.staff;

create table actor (actor_id smallint not null, first_name varchar(45) not null, last_name varchar(45) not null, last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_actor primary key (actor_id));
create index idx_actor_last_name on actor (last_name);
create table actor_genre (actor_genre_id smallint not null, actor_id smallint not null, name varchar(20) not null, constraint pk_actor_genre primary key (actor_genre_id));
create index actor_id on actor_genre (actor_id);
create table actor_info (actor_id smallint default 0 not null, first_name varchar(45) not null, last_name varchar(45) not null, film_info clob, constraint pk_actor_info primary key (actor_id, first_name, last_name));
create table address (address_id smallint not null, address varchar(50) not null, address2 varchar(50), district varchar(20), city_id smallint not null, postal_code varchar(10), phone varchar(20), last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_address primary key (address_id));
create index idx_fk_city_id on address (city_id);
create table category (category_id smallint not null, name varchar(25) not null, last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_category primary key (category_id));
create table city (city_id smallint not null, city varchar(50) not null, country_id smallint not null, last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_city primary key (city_id));
create index idx_fk_country_id on city (country_id);
create table country (country_id smallint not null, country varchar(50) not null, last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_country primary key (country_id));
create table customer (customer_id smallint not null, store_id smallint not null, first_name varchar(45) not null, last_name varchar(45) not null, email varchar(50), address_id smallint not null, active smallint default 1 not null, create_date timestamp not null, last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_customer primary key (customer_id));
create index idx_fk_address_id on customer (address_id);
create index idx_customer_fk_store_id on customer (store_id);
create index idx_last_name on customer (last_name);
create table datetime (id smallint not null, time time, timestamp timestamp, date date, datetime timestamp, constraint pk_datetime primary key (id, time, timestamp, date, datetime));
create table film (film_id smallint not null, title varchar(255) not null, description clob, release_year date, language_id smallint not null, original_language_id smallint, rental_duration smallint default 3 not null, rental_rate decimal(10,2) default 4.99 not null, length smallint, replacement_cost decimal(10,2) default 19.99 not null, rating varchar(255) default 'G', special_features varchar(255), last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_film primary key (film_id));
create index idx_fk_language_id on film (language_id);
create index idx_fk_original_language_id on film (original_language_id);
create index idx_title on film (title);
create table film_actor (actor_id smallint not null, film_id smallint not null, last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_film_actor primary key (actor_id, film_id));
create index idx_film_actor_fk_film_id on film_actor (film_id);
create table film_category (film_id smallint not null, category_id smallint not null, last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_film_category primary key (film_id, category_id));
create index fk_film_category_category on film_category (category_id);
create table film_comment (film_id smallint not null, comment varchar(128), constraint pk_film_comment primary key (film_id, comment));
create index film_comment_film_id on film_comment (film_id);
create table film_genre (film_id smallint not null, genre varchar(128), constraint pk_film_genre primary key (film_id, genre));
create index film_genre_film_id on film_genre (film_id);
create table film_image (film_id smallint not null, image blob, constraint pk_film_image primary key (film_id));
create index film_image_film_id on film_image (film_id);
create table film_origin (film_id smallint not null, city varchar(128), country varchar(128), constraint pk_film_origin primary key (film_id, city, country));
create index film_origin_film_id on film_origin (film_id);
create table film_rating (film_rating_id smallint not null, film_id smallint not null, stars smallint not null, constraint pk_film_rating primary key (film_rating_id));
create index film_rating_film_id on film_rating (film_id);
create table film_text (film_id smallint not null, title varchar(255) not null, description clob, constraint pk_film_text primary key (film_id));
create index idx_title_description on film_text (title);
create table inventory (inventory_id smallint not null, film_id smallint not null, store_id smallint not null, last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_inventory primary key (inventory_id));
create index idx_inventory_fk_film_id on inventory (film_id);
create index idx_store_store_id on inventory (store_id);
create index idx_store_film_id on inventory (film_id);
create table language (language_id smallint not null, name varchar(20) not null, last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_language primary key (language_id));
create table payment (payment_id smallint not null, customer_id smallint not null, staff_id smallint not null, rental_id integer, amount decimal(10,2) not null, payment_date timestamp not null, last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_payment primary key (payment_id));
create index fk_payment_rental on payment (rental_id);
create index idx_payment_fk_customer_id on payment (customer_id);
create index idx_payment_fk_staff_id on payment (staff_id);
create table rental (rental_id integer not null, rental_date timestamp not null, inventory_id smallint not null, customer_id smallint not null, return_date timestamp, staff_id smallint not null, last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_rental primary key (rental_id));
create index rental_rental_date on rental (rental_date);
create index rental_inventory_id on rental (inventory_id);
create index rental_customer_id on rental (customer_id);
create index idx_rental_fk_customer_id on rental (customer_id);
create index idx_fk_inventory_id on rental (inventory_id);
create index idx_rental_fk_staff_id on rental (staff_id);
create table staff (staff_id smallint not null, first_name varchar(45) not null, last_name varchar(45) not null, address_id smallint not null, picture blob, email varchar(50), store_id smallint not null, active smallint default 1 not null, username varchar(16) not null, password varchar(40), last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_staff primary key (staff_id));
create index idx_staff_fk_address_id on staff (address_id);
create index idx_staff_fk_store_id on staff (store_id);
create table store (store_id smallint not null, manager_staff_id smallint not null, address_id smallint not null, last_update timestamp default CURRENT_TIMESTAMP not null, constraint pk_store primary key (store_id));
create index idx_unique_manager on store (manager_staff_id);
create index idx_store_fk_address_id on store (address_id);
alter table actor_genre add constraint fk_actor_genre_actor foreign key (actor_id) references actor;
alter table address add constraint fk_address_city foreign key (city_id) references city;
alter table city add constraint fk_city_country foreign key (country_id) references country;
alter table customer add constraint fk_customer_address foreign key (address_id) references address;
alter table customer add constraint fk_customer_store foreign key (store_id) references store;
alter table film add constraint fk_film_language foreign key (language_id) references language;
alter table film add constraint fk_film_orig_language foreign key (original_language_id) references language;
alter table film_actor add constraint fk_film_actor_actor foreign key (actor_id) references actor;
alter table film_actor add constraint fk_film_actor_film foreign key (film_id) references film;
alter table film_category add constraint fk_film_category_category foreign key (category_id) references category;
alter table film_category add constraint fk_film_category_film foreign key (film_id) references film;
alter table film_comment add constraint fk_film_comment_film foreign key (film_id) references film;
alter table film_genre add constraint fk_film_genre_film foreign key (film_id) references film;
alter table film_image add constraint fk_film_image_film foreign key (film_id) references film;
alter table film_origin add constraint fk_film_origin_film foreign key (film_id) references film;
alter table film_rating add constraint fk_film_rating_film foreign key (film_id) references film;
alter table inventory add constraint fk_inventory_film foreign key (film_id) references film;
alter table inventory add constraint fk_inventory_store foreign key (store_id) references store;
alter table payment add constraint fk_payment_customer foreign key (customer_id) references customer;
alter table payment add constraint fk_payment_rental foreign key (rental_id) references rental;
alter table payment add constraint fk_payment_staff foreign key (staff_id) references staff;
alter table rental add constraint fk_rental_customer foreign key (customer_id) references customer;
alter table rental add constraint fk_rental_inventory foreign key (inventory_id) references inventory;
alter table rental add constraint fk_rental_staff foreign key (staff_id) references staff;
alter table staff add constraint fk_staff_address foreign key (address_id) references address;
alter table staff add constraint fk_staff_store foreign key (store_id) references store;
alter table store add constraint fk_store_address foreign key (address_id) references address;
alter table store add constraint fk_store_staff foreign key (manager_staff_id) references staff;
